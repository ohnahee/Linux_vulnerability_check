#!/bin/bash

echo "=========================="
echo "U-13 (상)"
echo "점검 사항: SUID 및 SGID 비트가 설정된 파일 점검"
echo "=========================="

# 결과 초기화
result="양호"
reason="SUID 및 SGID 비트가 설정된 파일의 소유자가 root이고 권한이 755 이하이며 시스템 디렉토리 내에 위치합니다."

# 시스템 디렉토리 목록
safe_dirs=("/bin" "/sbin" "/usr/bin" "/usr/sbin" "/lib" "/lib64" "/usr/lib" "/usr/lib64")

# SUID 및 SGID 파일 점검 함수
check_file() {
    local file=$1
    local owner=$(stat -c %U "$file")
    local permissions=$(stat -c %a "$file")
    local directory=$(dirname "$file")

    # 소유자 진단
    if [ "$owner" != "root" ]; then
        result="취약"
        reason="$file 파일의 소유자가 root가 아닙니다. (현재 소유자: $owner)"
    fi

    # 파일 권한 진단
    if [ "$permissions" -gt 755 ]; then
        result="취약"
        reason="$file 파일의 권한이 755 이하가 아닙니다. (현재 권한: $permissions)"
    fi

    # 시스템 디렉토리 여부 진단
    local safe=false
    for dir in "${safe_dirs[@]}"; do
        if [[ "$directory" == "$dir"* ]]; then
            safe=true
            break
        fi
    done

    if [ "$safe" = false ]; then
        result="취약"
        reason="$file 파일이 시스템 디렉토리 외의 위치에 있습니다. (현재 위치: $directory)"
    fi

    # 파일 상태 출력
    echo "$file 소유자: $owner, 권한: $permissions, 위치: $directory"
}

# SUID 및 SGID 파일 검색 및 점검
find / \( -perm -4000 -o -perm -2000 \) -type f 2>/dev/null | while read -r file; do
    check_file "$file"
done

# 최종 결과 출력
if [ "$result" = "취약" ]; then
    echo "※ 결과 : 취약(Vulnerable)"
    echo "$reason"
else
    echo "※ 결과 : 양호(Good)"
    echo "$reason"
fi

exit 0
