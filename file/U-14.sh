#!/bin/bash

echo "=========================="
echo "U-14 (상)"
echo "점검 사항: 홈 디렉터리 내 환경변수 파일의 소유자 및 접근 권한 점검"
echo "=========================="

# 환경변수 파일 목록
env_files=(".profile" ".kshrc" ".cshrc" ".bashrc" ".bash_profile" ".login" ".exrc" ".netrc")

# 사용자 홈 디렉터리 목록
home_dirs=$(cat /etc/passwd | grep -E '/home|/root' | awk -F: '{print $6}')

# 결과 초기화
result="양호"
reason="모든 환경변수 파일의 소유자 및 권한이 적절하게 설정되어 있습니다."

# 환경변수 파일 점검 함수
check_file() {
    local file=$1
    local home_dir=$2
    if [ -e "$home_dir/$file" ]; then
        local owner=$(stat -c %U "$home_dir/$file")
        local permissions=$(stat -c %a "$home_dir/$file")

        # 소유자 및 권한 진단
        if [ "$owner" != "$(basename $home_dir)" ] && [ "$owner" != "root" ]; then
            echo "$home_dir/$file 파일의 소유자가 root 또는 해당 계정이 아닙니다. (현재 소유자: $owner)"
            result="취약"
            reason="일부 환경변수 파일의 소유자가 root 또는 해당 계정이 아닙니다."
        fi

        if [ $(($permissions % 10)) -ge 2 ]; then
            echo "$home_dir/$file 파일에 root와 소유자 외에 쓰기 권한이 부여되어 있습니다. (현재 권한: $permissions)"
            result="취약"
            reason="일부 환경변수 파일에 root와 소유자 외에 쓰기 권한이 부여되어 있습니다."
        fi

        # 파일 상태 출력
        echo "$home_dir/$file 소유자: $owner, 권한: $permissions"
    fi
}

# 각 홈 디렉터리의 환경변수 파일 점검
for home_dir in $home_dirs; do
    for file in "${env_files[@]}"; do
        check_file "$file" "$home_dir"
    done
done

# 최종 결과 출력
if [ "$result" = "취약" ]; then
    echo "※ 결과 : 취약(Vulnerable)"
else
    echo "※ 결과 : 양호(Good)"
    echo "$reason"
fi

exit 0
